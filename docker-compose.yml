# This docker-compose file is used for local development
version: "3"
services:

# Twine
  twine:
    build: 
      context: ./app
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    pid: host
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./app:/app/
    environment:
      - DEV=true
    command: sh -c "pnpm install && pnpm run dev"

# Client side
  wireguard-client:
    image: lscr.io/linuxserver/wireguard:latest
    restart: unless-stopped
    depends_on:
      - wireguard-server
    networks:
      client:
      server:
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./config/wireguard-test/client.conf:/config/wg_confs/wg0.conf:ro
    labels:
      # Interface for forwarding traffic (Required for "twine.route.*=wireguard-client" to work) 
      - twine.nat.interfaces=+
      # Expose qbittorrent on WireGuard Client ip address
      - twine.nat.forward.80=qbittorrent:80
      # - twine.host.routes=10.250.0.0/24
      # - twine.whitelist.eth+.to=qbittorrent

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    restart: unless-stopped
    networks:
      - client
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WEBUI_PORT=80
    ports:
      - 127.0.0.1:80:80
    labels:
      # Route all outgoing traffic via WireGuard Client
      - twine.route.0.0.0.0/1=wireguard-client
      - twine.route.128.0.0.0/1=wireguard-client
      # Route only internal subnet via WireGuard Client
      # - twine.route.10.250.0.0/24=wireguard-client

# Server side 
  wireguard-server:
    image: lscr.io/linuxserver/wireguard:latest
    restart: unless-stopped
    networks:
      - server
    cap_add:
      - NET_ADMIN
      - SYS_MODULE 
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - SERVERURL=wireguard-server
      - ALLOWEDIPS=0.0.0.0/0
      - PEERS=1
      - INTERNAL_SUBNET=10.250.0.0/24
    volumes:
      - ./config/wireguard-test/server.conf:/config/wg_confs/wg0.conf:ro
      - /lib/modules:/lib/modules
    labels:
      - twine.nat.interfaces=+
      # Expose qbittorrent on WireGuard Server ip address
      - twine.nat.forward.80=helloworld
      # - twine.whitelist.wg+.to=helloworld
      

  helloworld:
    image: nginxdemos/hello
    restart: unless-stopped
    networks:
      - server
    # labels:
      # Make this container only accessible with CloudFlare IP address
      # - twine.whitelist.eth+.from=https://www.cloudflare.com/ips-v4/

networks:
  client:
  server:
